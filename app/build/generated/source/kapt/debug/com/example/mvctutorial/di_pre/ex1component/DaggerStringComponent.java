// Generated by Dagger (https://dagger.dev).
package com.example.mvctutorial.di_pre.ex1component;

import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerStringComponent implements StringComponent {
  private final StringModule stringModule;

  private final DaggerStringComponent stringComponent = this;

  private DaggerStringComponent(StringModule stringModuleParam) {
    this.stringModule = stringModuleParam;

  }

  public static Builder builder() {
    return new Builder();
  }

  public static StringComponent create() {
    return new Builder().build();
  }

  @Override
  public void injectString(Student student) {
    injectStudent(student);
  }

  private Student injectStudent(Student instance) {
    Student_MembersInjector.injectName(instance, StringModule_ProvidesStringFactory.providesString(stringModule));
    return instance;
  }

  public static final class Builder {
    private StringModule stringModule;

    private Builder() {
    }

    public Builder stringModule(StringModule stringModule) {
      this.stringModule = Preconditions.checkNotNull(stringModule);
      return this;
    }

    public StringComponent build() {
      if (stringModule == null) {
        this.stringModule = new StringModule();
      }
      return new DaggerStringComponent(stringModule);
    }
  }
}
