// Generated by Dagger (https://dagger.dev).
package com.example.mvctutorial.di_pre.ex2provision;

import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerPersonComponent implements PersonComponent {
  private final PersonModule personModule;

  private final DaggerPersonComponent personComponent = this;

  private DaggerPersonComponent(PersonModule personModuleParam) {
    this.personModule = personModuleParam;

  }

  public static Builder builder() {
    return new Builder();
  }

  public static PersonComponent create() {
    return new Builder().build();
  }

  @Override
  public String getString() {
    return PersonModule_ProvidesStringFactory.providesString(personModule);
  }

  @Override
  public Student getStudent() {
    return new Student(PersonModule_ProvidesStringFactory.providesString(personModule));
  }

  public static final class Builder {
    private PersonModule personModule;

    private Builder() {
    }

    public Builder personModule(PersonModule personModule) {
      this.personModule = Preconditions.checkNotNull(personModule);
      return this;
    }

    public PersonComponent build() {
      if (personModule == null) {
        this.personModule = new PersonModule();
      }
      return new DaggerPersonComponent(personModule);
    }
  }
}
